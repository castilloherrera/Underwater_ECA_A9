<launch>
  <arg name="name" default="eca_a9"/>
  <arg name="gui_on" default="true"/>
  <arg name="namespace" default="eca_a9"/>
 
  <arg name="max_forward_speed" default="2.5"/>
  <arg name="dubins_radius" default="1"/>
  <arg name="min_thrust" default="0"/>
  <arg name="max_thrust" default="120"/>
  <arg name="thrust_p_gain" default="5.0"/>
  <arg name="thrust_d_gain" default="0.01"/>
  <arg name="p_roll" default="0.2"/>
  <arg name="p_pitch" default="0.8"/>
  <arg name="d_pitch" default="0.0"/>
  <arg name="p_yaw" default="0.8"/>
  <arg name="d_yaw" default="0.0"/>
  <arg name="n_fins" default="4"/>
  <arg name="map_roll" value="1,1,1,1"/>
  <arg name="map_pitch" value="1,1,-1,-1"/>
  <arg name="map_yaw" value="-1,1,1,-1"/>
  <arg name="max_fin_angle" default="1.396263402"/>
  <arg name="look_ahead_delay" default="0.0"/>
  <arg name="dubins_max_pitch" default="0.26"/>
  <arg name="desired_pitch_limit" default="0.26"/>
  <arg name="yaw_error_limit" default="1.57"/>
  <arg name="use_ned_frame" default="false"/>
  <arg name="stamped_pose_only" default="false"/>
  <arg name="timeout_idle_mode" default="5"/>

  <!-- Thruster configuration -->
  <arg name="thruster_topic" default="thrusters/0/input"/>
  <arg name="thruster_topic_prefix" default="thrusters" />
  <arg name="thruster_topic_suffix" default="input" />
  <arg name="thruster_frame_base" default="thruster_" />
  <arg name="thruster_conversion_fcn" default="proportional" />
  <arg name="thruster_gain" default="0.000049"/>

  <arg name="fin_topic_prefix" default="fins"/>
  <arg name="fin_topic_suffix" default="input"/>

  <!-- This node just reads the trajectory and waypoint topics and publishes
       visualization markers for RViz -->
  <group if="$(arg gui_on)">
    <group ns="$(arg name)">
      <node pkg="utils"
             type="trajectory_marker_publisher.py"
             name="trajectory_marker_publisher"
             output="screen">
         <remap from="trajectory" to="dp_controller/trajectory"/>
         <remap from="waypoints" to="dp_controller/waypoints"/>
         <remap from="reference" to="dp_controller/reference"/>
      </node>
    </group>
  </group>  

  <group ns="$(arg name)">
    <node pkg="trajectory_control"
          type="auv_geometric_tracking_controller_path_random_file.py"
          name="auv_geometric_tracking_controller"
          output="screen"
          unless="$(arg use_ned_frame)">
      <remap from="odom" to="pose_gt"/>
      <remap from="trajectory" to="dp_controller/trajectory"/>
      <remap from="input_trajectory" to="dp_controller/input_trajectory"/>
      <remap from="waypoints" to="dp_controller/waypoints"/>
      <remap from="reference" to="dp_controller/reference"/>
      <remap from="thruster_output" to="thruster_manager/input_stamped"/>
      <remap from="auv_command_output" to="control_allocation/control_input"/>
      <rosparam subst_value="true">
          timeout_idle_mode: $(arg timeout_idle_mode)
          max_forward_speed: $(arg max_forward_speed)
          base_link: base_link
          is_underactuated: true
          stamped_pose_only: $(arg stamped_pose_only)
          inertial_frame_id: world
          min_thrust: $(arg min_thrust)
          max_thrust: $(arg max_thrust)
          thruster_topic: $(arg thruster_topic)
          thrust_p_gain: $(arg thrust_p_gain)
          thrust_d_gain: $(arg thrust_d_gain)
          p_roll: $(arg p_roll)
          p_pitch: $(arg p_pitch)
          d_pitch: $(arg d_pitch)
          p_yaw: $(arg p_yaw)
          d_yaw: $(arg d_yaw)
          n_fins: $(arg n_fins)
          map_roll: [$(arg map_roll)]
          map_pitch: [$(arg map_pitch)]
          map_yaw: [$(arg map_yaw)]
          fin_topic_prefix: $(arg fin_topic_prefix)
          fin_topic_suffix: $(arg fin_topic_suffix)
          max_fin_angle: $(arg max_fin_angle)
          look_ahead_delay: $(arg look_ahead_delay)
          desired_pitch_limit: $(arg desired_pitch_limit)
          yaw_error_limit: $(arg yaw_error_limit)
          dubins:
              radius: $(arg dubins_radius)
              max_pitch: $(arg dubins_max_pitch)
          lipb:
              radius: $(arg dubins_radius)
          thruster_config:
              topic_prefix: $(arg thruster_topic_prefix)
              topic_suffix: $(arg thruster_topic_suffix)
              frame_base: $(arg thruster_frame_base)
              max_thrust: $(arg max_thrust)
              conversion_fcn: $(arg thruster_conversion_fcn)
              conversion_fcn_params:
                  gain: $(arg thruster_gain)
      </rosparam>
    </node>

    <node pkg="trajectory_control"
          type="auv_geometric_tracking_controller_path_random_file.py"
          name="auv_geometric_tracking_controller"
          output="screen"
          if="$(arg use_ned_frame)">
      <remap from="odom" to="pose_gt_ned"/>
      <remap from="trajectory" to="dp_controller/trajectory"/>
      <remap from="input_trajectory" to="dp_controller/input_trajectory"/>
      <remap from="waypoints" to="dp_controller/waypoints"/>
      <remap from="error" to="dp_controller/error"/>
      <remap from="reference" to="dp_controller/reference"/>
      <remap from="thruster_output" to="thruster_manager/input_stamped"/>
      <remap from="auv_command_output" to="control_allocation/control_input"/>
      <rosparam subst_value="true">
          timeout_idle_mode: $(arg timeout_idle_mode)
          max_forward_speed: $(arg max_forward_speed)
          base_link: base_link_ned
          is_underactuated: true
          stamped_pose_only: $(arg stamped_pose_only)
          inertial_frame_id: world_ned
          min_thrust: $(arg min_thrust)
          max_thrust: $(arg max_thrust)
          thruster_topic: $(arg thruster_topic)          
          thrust_p_gain: $(arg thrust_p_gain)
          thrust_d_gain: $(arg thrust_d_gain)
          p_roll: $(arg p_roll)
          p_pitch: $(arg p_pitch)
          d_pitch: $(arg d_pitch)
          p_yaw: $(arg p_yaw)
          d_yaw: $(arg d_yaw)
          n_fins: $(arg n_fins)
          map_roll: [$(arg map_roll)]
          map_pitch: [$(arg map_pitch)]
          map_yaw: [$(arg map_yaw)]
          fin_topic_prefix: $(arg fin_topic_prefix)
          fin_topic_suffix: $(arg fin_topic_suffix)
          max_fin_angle: $(arg max_fin_angle)
          look_ahead_delay: $(arg look_ahead_delay)
          desired_pitch_limit: $(arg desired_pitch_limit)
          yaw_error_limit: $(arg yaw_error_limit)
          dubins:
              radius: $(arg dubins_radius)
              max_pitch: $(arg dubins_max_pitch)
          lipb:
              radius: 10
          thruster_config:
              topic_prefix: $(arg thruster_topic_prefix)
              topic_suffix: $(arg thruster_topic_suffix)
              frame_base: $(arg thruster_frame_base)
              max_thrust: $(arg max_thrust)
              conversion_fcn: $(arg thruster_conversion_fcn)
              conversion_fcn_params:
                  gain: $(arg thruster_gain)
      </rosparam>
    </node>
</group>
  <group if="$(arg gui_on)">
      <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find control)/rviz/eca_a9_control.rviz"/>
  </group>
</launch>
